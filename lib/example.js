'use strict';

var easy = require('easy');

var options = require('./options'),
    Explorer = require('./explorer'),
    RubbishBin = require('./rubbishBin');

var Body = easy.Body,
    React = easy.React,
    NO_DRAGGING_WITHIN = options.NO_DRAGGING_WITHIN,
    NO_DRAGGING_SUB_ENTRIES = options.NO_DRAGGING_SUB_ENTRIES;


var openHandler = function openHandler(filePath) {
  alert(filePath);
},
    moveHandler = function moveHandler(pathMaps, done) {
  done();
},
    removeHandler = function removeHandler(pathMaps, done) {
  done();
};

var body = new Body(),
    explorer1 = React.createElement(Explorer, { topmostDirectoryName: 'explorer1', onOpen: openHandler, onMove: moveHandler, options: { NO_DRAGGING_WITHIN: NO_DRAGGING_WITHIN } }),
    explorer2 = React.createElement(Explorer, { topmostDirectoryName: 'explorer2', onOpen: openHandler, onMove: moveHandler, options: { NO_DRAGGING_SUB_ENTRIES: NO_DRAGGING_SUB_ENTRIES } }),
    rubbishBin = React.createElement(RubbishBin, { onRemove: removeHandler });

body.append(rubbishBin);

body.append(React.createElement('br', null));

body.append(explorer1);

body.append(React.createElement('br', null));

body.append(explorer2);

explorer1.addDropTarget(rubbishBin);

explorer1.addDropTarget(explorer2);

explorer2.addDropTarget(rubbishBin);

explorer2.addDropTarget(explorer1);

rubbishBin.addDropTarget(explorer1);

rubbishBin.addDropTarget(explorer2);

explorer1.addFilePath('explorer1/file1.txt');
explorer1.addFilePath('explorer1/directory1/file2.txt');
explorer2.addFilePath('explorer2/directory2/file3.txt');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9leGFtcGxlLmpzIl0sIm5hbWVzIjpbImVhc3kiLCJyZXF1aXJlIiwib3B0aW9ucyIsIkV4cGxvcmVyIiwiUnViYmlzaEJpbiIsIkJvZHkiLCJSZWFjdCIsIk5PX0RSQUdHSU5HX1dJVEhJTiIsIk5PX0RSQUdHSU5HX1NVQl9FTlRSSUVTIiwib3BlbkhhbmRsZXIiLCJmaWxlUGF0aCIsImFsZXJ0IiwibW92ZUhhbmRsZXIiLCJwYXRoTWFwcyIsImRvbmUiLCJyZW1vdmVIYW5kbGVyIiwiYm9keSIsImV4cGxvcmVyMSIsImV4cGxvcmVyMiIsInJ1YmJpc2hCaW4iLCJhcHBlbmQiLCJhZGREcm9wVGFyZ2V0IiwiYWRkRmlsZVBhdGgiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiOztBQUVBLElBQU1DLFVBQVVELFFBQVEsV0FBUixDQUFoQjtBQUFBLElBQ01FLFdBQVdGLFFBQVEsWUFBUixDQURqQjtBQUFBLElBRU1HLGFBQWFILFFBQVEsY0FBUixDQUZuQjs7SUFJUUksSSxHQUFnQkwsSSxDQUFoQkssSTtJQUFNQyxLLEdBQVVOLEksQ0FBVk0sSztJQUNOQyxrQixHQUFnREwsTyxDQUFoREssa0I7SUFBb0JDLHVCLEdBQTRCTixPLENBQTVCTSx1Qjs7O0FBRTVCLElBQU1DLGNBQWMsU0FBZEEsV0FBYyxDQUFDQyxRQUFELEVBQWM7QUFDMUJDLFFBQU1ELFFBQU47QUFDRCxDQUZQO0FBQUEsSUFHTUUsY0FBYyxTQUFkQSxXQUFjLENBQUNDLFFBQUQsRUFBV0MsSUFBWCxFQUFvQjtBQUNoQ0E7QUFDRCxDQUxQO0FBQUEsSUFNTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDRixRQUFELEVBQVdDLElBQVgsRUFBb0I7QUFDbENBO0FBQ0QsQ0FSUDs7QUFVQSxJQUFNRSxPQUFPLElBQUlYLElBQUosRUFBYjtBQUFBLElBQ01ZLFlBRUUsb0JBQUMsUUFBRCxJQUFVLHNCQUFxQixXQUEvQixFQUEyQyxRQUFRUixXQUFuRCxFQUFnRSxRQUFRRyxXQUF4RSxFQUFxRixTQUFTLEVBQUVMLHNDQUFGLEVBQTlGLEdBSFI7QUFBQSxJQU1NVyxZQUVFLG9CQUFDLFFBQUQsSUFBVSxzQkFBcUIsV0FBL0IsRUFBMkMsUUFBUVQsV0FBbkQsRUFBZ0UsUUFBUUcsV0FBeEUsRUFBcUYsU0FBUyxFQUFFSixnREFBRixFQUE5RixHQVJSO0FBQUEsSUFXTVcsYUFFRSxvQkFBQyxVQUFELElBQVksVUFBVUosYUFBdEIsR0FiUjs7QUFpQkFDLEtBQUtJLE1BQUwsQ0FBWUQsVUFBWjs7QUFFQUgsS0FBS0ksTUFBTCxDQUFZLCtCQUFaOztBQUVBSixLQUFLSSxNQUFMLENBQVlILFNBQVo7O0FBRUFELEtBQUtJLE1BQUwsQ0FBWSwrQkFBWjs7QUFFQUosS0FBS0ksTUFBTCxDQUFZRixTQUFaOztBQUVBRCxVQUFVSSxhQUFWLENBQXdCRixVQUF4Qjs7QUFFQUYsVUFBVUksYUFBVixDQUF3QkgsU0FBeEI7O0FBRUFBLFVBQVVHLGFBQVYsQ0FBd0JGLFVBQXhCOztBQUVBRCxVQUFVRyxhQUFWLENBQXdCSixTQUF4Qjs7QUFFQUUsV0FBV0UsYUFBWCxDQUF5QkosU0FBekI7O0FBRUFFLFdBQVdFLGFBQVgsQ0FBeUJILFNBQXpCOztBQUVBRCxVQUFVSyxXQUFWLENBQXNCLHFCQUF0QjtBQUNBTCxVQUFVSyxXQUFWLENBQXNCLGdDQUF0QjtBQUNBSixVQUFVSSxXQUFWLENBQXNCLGdDQUF0QiIsImZpbGUiOiJleGFtcGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBlYXN5ID0gcmVxdWlyZSgnZWFzeScpO1xuXG5jb25zdCBvcHRpb25zID0gcmVxdWlyZSgnLi9vcHRpb25zJyksXG4gICAgICBFeHBsb3JlciA9IHJlcXVpcmUoJy4vZXhwbG9yZXInKSxcbiAgICAgIFJ1YmJpc2hCaW4gPSByZXF1aXJlKCcuL3J1YmJpc2hCaW4nKTtcblxuY29uc3QgeyBCb2R5LCBSZWFjdCB9ID0gZWFzeSxcbiAgICAgIHsgTk9fRFJBR0dJTkdfV0lUSElOLCBOT19EUkFHR0lOR19TVUJfRU5UUklFUyB9ID0gb3B0aW9ucztcblxuY29uc3Qgb3BlbkhhbmRsZXIgPSAoZmlsZVBhdGgpID0+IHtcbiAgICAgICAgYWxlcnQoZmlsZVBhdGgpXG4gICAgICB9LFxuICAgICAgbW92ZUhhbmRsZXIgPSAocGF0aE1hcHMsIGRvbmUpID0+IHtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUhhbmRsZXIgPSAocGF0aE1hcHMsIGRvbmUpID0+IHtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfTtcblxuY29uc3QgYm9keSA9IG5ldyBCb2R5KCksXG4gICAgICBleHBsb3JlcjEgPVxuXG4gICAgICAgIDxFeHBsb3JlciB0b3Btb3N0RGlyZWN0b3J5TmFtZT1cImV4cGxvcmVyMVwiIG9uT3Blbj17b3BlbkhhbmRsZXJ9IG9uTW92ZT17bW92ZUhhbmRsZXJ9IG9wdGlvbnM9e3sgTk9fRFJBR0dJTkdfV0lUSElOIH19IC8+XG5cbiAgICAgICxcbiAgICAgIGV4cGxvcmVyMiA9XG5cbiAgICAgICAgPEV4cGxvcmVyIHRvcG1vc3REaXJlY3RvcnlOYW1lPVwiZXhwbG9yZXIyXCIgb25PcGVuPXtvcGVuSGFuZGxlcn0gb25Nb3ZlPXttb3ZlSGFuZGxlcn0gb3B0aW9ucz17eyBOT19EUkFHR0lOR19TVUJfRU5UUklFUyB9fSAvPlxuXG4gICAgICAsXG4gICAgICBydWJiaXNoQmluID1cblxuICAgICAgICA8UnViYmlzaEJpbiBvblJlbW92ZT17cmVtb3ZlSGFuZGxlcn0gLz5cblxuICAgICAgO1xuXG5ib2R5LmFwcGVuZChydWJiaXNoQmluKTtcblxuYm9keS5hcHBlbmQoPGJyIC8+KTtcblxuYm9keS5hcHBlbmQoZXhwbG9yZXIxKTtcblxuYm9keS5hcHBlbmQoPGJyIC8+KTtcblxuYm9keS5hcHBlbmQoZXhwbG9yZXIyKTtcblxuZXhwbG9yZXIxLmFkZERyb3BUYXJnZXQocnViYmlzaEJpbik7XG5cbmV4cGxvcmVyMS5hZGREcm9wVGFyZ2V0KGV4cGxvcmVyMik7XG5cbmV4cGxvcmVyMi5hZGREcm9wVGFyZ2V0KHJ1YmJpc2hCaW4pO1xuXG5leHBsb3JlcjIuYWRkRHJvcFRhcmdldChleHBsb3JlcjEpO1xuXG5ydWJiaXNoQmluLmFkZERyb3BUYXJnZXQoZXhwbG9yZXIxKTtcblxucnViYmlzaEJpbi5hZGREcm9wVGFyZ2V0KGV4cGxvcmVyMik7XG5cbmV4cGxvcmVyMS5hZGRGaWxlUGF0aCgnZXhwbG9yZXIxL2ZpbGUxLnR4dCcpO1xuZXhwbG9yZXIxLmFkZEZpbGVQYXRoKCdleHBsb3JlcjEvZGlyZWN0b3J5MS9maWxlMi50eHQnKTtcbmV4cGxvcmVyMi5hZGRGaWxlUGF0aCgnZXhwbG9yZXIyL2RpcmVjdG9yeTIvZmlsZTMudHh0Jyk7XG4iXX0=