'use strict';

var easy = require('easy');

var Explorer = require('./explorer'),
    RubbishBin = require('./rubbishBin');

var Body = easy.Body,
    React = easy.React;


var openHandler = function openHandler(filePath) {
  alert(filePath);
},
    moveHandler = function moveHandler(pathMaps, done) {
  done();
},
    removeHandler = function removeHandler(pathMaps, done) {
  done();
};

var body = new Body(),
    explorer1 = React.createElement(Explorer, { topmostDirectoryName: 'explorer1', onOpen: openHandler, onMove: moveHandler }),
    explorer2 = React.createElement(Explorer, { topmostDirectoryName: 'explorer2', onOpen: openHandler, onMove: moveHandler }),
    rubbishBin = React.createElement(RubbishBin, { onRemove: removeHandler });

body.append(rubbishBin);

body.append(React.createElement('br', null));

body.append(explorer1);

body.append(React.createElement('br', null));

body.append(explorer2);

explorer1.addDropTarget(rubbishBin);

explorer1.addDropTarget(explorer2);

explorer2.addDropTarget(rubbishBin);

explorer2.addDropTarget(explorer1);

rubbishBin.addDropTarget(explorer1);

rubbishBin.addDropTarget(explorer2);

explorer1.addDirectoryPath('explorer1/directory1');
explorer1.addDirectoryPath('explorer1/directory2');
explorer1.addFilePath('explorer1/directory1/file1.txt');
explorer1.addFilePath('explorer1/directory1/file2.txt');
explorer1.addFilePath('explorer1/directory2/file3.txt');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9leGFtcGxlLmpzIl0sIm5hbWVzIjpbImVhc3kiLCJyZXF1aXJlIiwiRXhwbG9yZXIiLCJSdWJiaXNoQmluIiwiQm9keSIsIlJlYWN0Iiwib3BlbkhhbmRsZXIiLCJmaWxlUGF0aCIsImFsZXJ0IiwibW92ZUhhbmRsZXIiLCJwYXRoTWFwcyIsImRvbmUiLCJyZW1vdmVIYW5kbGVyIiwiYm9keSIsImV4cGxvcmVyMSIsImV4cGxvcmVyMiIsInJ1YmJpc2hCaW4iLCJhcHBlbmQiLCJhZGREcm9wVGFyZ2V0IiwiYWRkRGlyZWN0b3J5UGF0aCIsImFkZEZpbGVQYXRoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxJQUFNQyxXQUFXRCxRQUFRLFlBQVIsQ0FBakI7QUFBQSxJQUNNRSxhQUFhRixRQUFRLGNBQVIsQ0FEbkI7O0lBR1FHLEksR0FBZ0JKLEksQ0FBaEJJLEk7SUFBTUMsSyxHQUFVTCxJLENBQVZLLEs7OztBQUVkLElBQU1DLGNBQWMsU0FBZEEsV0FBYyxDQUFDQyxRQUFELEVBQWM7QUFDMUJDLFFBQU1ELFFBQU47QUFDRCxDQUZQO0FBQUEsSUFHTUUsY0FBYyxTQUFkQSxXQUFjLENBQUNDLFFBQUQsRUFBV0MsSUFBWCxFQUFvQjtBQUNoQ0E7QUFDRCxDQUxQO0FBQUEsSUFNTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDRixRQUFELEVBQVdDLElBQVgsRUFBb0I7QUFDbENBO0FBQ0QsQ0FSUDs7QUFVQSxJQUFNRSxPQUFPLElBQUlULElBQUosRUFBYjtBQUFBLElBQ01VLFlBRUUsb0JBQUMsUUFBRCxJQUFVLHNCQUFxQixXQUEvQixFQUEyQyxRQUFRUixXQUFuRCxFQUFnRSxRQUFRRyxXQUF4RSxHQUhSO0FBQUEsSUFNTU0sWUFFSSxvQkFBQyxRQUFELElBQVUsc0JBQXFCLFdBQS9CLEVBQTJDLFFBQVFULFdBQW5ELEVBQWdFLFFBQVFHLFdBQXhFLEdBUlY7QUFBQSxJQVdNTyxhQUVFLG9CQUFDLFVBQUQsSUFBWSxVQUFVSixhQUF0QixHQWJSOztBQWlCQUMsS0FBS0ksTUFBTCxDQUFZRCxVQUFaOztBQUVBSCxLQUFLSSxNQUFMLENBQVksK0JBQVo7O0FBRUFKLEtBQUtJLE1BQUwsQ0FBWUgsU0FBWjs7QUFFQUQsS0FBS0ksTUFBTCxDQUFZLCtCQUFaOztBQUVBSixLQUFLSSxNQUFMLENBQVlGLFNBQVo7O0FBRUFELFVBQVVJLGFBQVYsQ0FBd0JGLFVBQXhCOztBQUVBRixVQUFVSSxhQUFWLENBQXdCSCxTQUF4Qjs7QUFFQUEsVUFBVUcsYUFBVixDQUF3QkYsVUFBeEI7O0FBRUFELFVBQVVHLGFBQVYsQ0FBd0JKLFNBQXhCOztBQUVBRSxXQUFXRSxhQUFYLENBQXlCSixTQUF6Qjs7QUFFQUUsV0FBV0UsYUFBWCxDQUF5QkgsU0FBekI7O0FBRUFELFVBQVVLLGdCQUFWLENBQTJCLHNCQUEzQjtBQUNBTCxVQUFVSyxnQkFBVixDQUEyQixzQkFBM0I7QUFDQUwsVUFBVU0sV0FBVixDQUFzQixnQ0FBdEI7QUFDQU4sVUFBVU0sV0FBVixDQUFzQixnQ0FBdEI7QUFDQU4sVUFBVU0sV0FBVixDQUFzQixnQ0FBdEIiLCJmaWxlIjoiZXhhbXBsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZWFzeSA9IHJlcXVpcmUoJ2Vhc3knKTtcblxuY29uc3QgRXhwbG9yZXIgPSByZXF1aXJlKCcuL2V4cGxvcmVyJyksXG4gICAgICBSdWJiaXNoQmluID0gcmVxdWlyZSgnLi9ydWJiaXNoQmluJyk7XG5cbmNvbnN0IHsgQm9keSwgUmVhY3QgfSA9IGVhc3k7XG5cbmNvbnN0IG9wZW5IYW5kbGVyID0gKGZpbGVQYXRoKSA9PiB7XG4gICAgICAgIGFsZXJ0KGZpbGVQYXRoKVxuICAgICAgfSxcbiAgICAgIG1vdmVIYW5kbGVyID0gKHBhdGhNYXBzLCBkb25lKSA9PiB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVIYW5kbGVyID0gKHBhdGhNYXBzLCBkb25lKSA9PiB7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH07XG5cbmNvbnN0IGJvZHkgPSBuZXcgQm9keSgpLFxuICAgICAgZXhwbG9yZXIxID1cblxuICAgICAgICA8RXhwbG9yZXIgdG9wbW9zdERpcmVjdG9yeU5hbWU9XCJleHBsb3JlcjFcIiBvbk9wZW49e29wZW5IYW5kbGVyfSBvbk1vdmU9e21vdmVIYW5kbGVyfSAvPlxuXG4gICAgICAsXG4gICAgICBleHBsb3JlcjIgPVxuXG4gICAgICAgICAgPEV4cGxvcmVyIHRvcG1vc3REaXJlY3RvcnlOYW1lPVwiZXhwbG9yZXIyXCIgb25PcGVuPXtvcGVuSGFuZGxlcn0gb25Nb3ZlPXttb3ZlSGFuZGxlcn0gLz5cblxuICAgICAgLFxuICAgICAgcnViYmlzaEJpbiA9XG5cbiAgICAgICAgPFJ1YmJpc2hCaW4gb25SZW1vdmU9e3JlbW92ZUhhbmRsZXJ9IC8+XG5cbiAgICAgIDtcblxuYm9keS5hcHBlbmQocnViYmlzaEJpbik7XG5cbmJvZHkuYXBwZW5kKDxiciAvPik7XG5cbmJvZHkuYXBwZW5kKGV4cGxvcmVyMSk7XG5cbmJvZHkuYXBwZW5kKDxiciAvPik7XG5cbmJvZHkuYXBwZW5kKGV4cGxvcmVyMik7XG5cbmV4cGxvcmVyMS5hZGREcm9wVGFyZ2V0KHJ1YmJpc2hCaW4pO1xuXG5leHBsb3JlcjEuYWRkRHJvcFRhcmdldChleHBsb3JlcjIpO1xuXG5leHBsb3JlcjIuYWRkRHJvcFRhcmdldChydWJiaXNoQmluKTtcblxuZXhwbG9yZXIyLmFkZERyb3BUYXJnZXQoZXhwbG9yZXIxKTtcblxucnViYmlzaEJpbi5hZGREcm9wVGFyZ2V0KGV4cGxvcmVyMSk7XG5cbnJ1YmJpc2hCaW4uYWRkRHJvcFRhcmdldChleHBsb3JlcjIpO1xuXG5leHBsb3JlcjEuYWRkRGlyZWN0b3J5UGF0aCgnZXhwbG9yZXIxL2RpcmVjdG9yeTEnKTtcbmV4cGxvcmVyMS5hZGREaXJlY3RvcnlQYXRoKCdleHBsb3JlcjEvZGlyZWN0b3J5MicpO1xuZXhwbG9yZXIxLmFkZEZpbGVQYXRoKCdleHBsb3JlcjEvZGlyZWN0b3J5MS9maWxlMS50eHQnKTtcbmV4cGxvcmVyMS5hZGRGaWxlUGF0aCgnZXhwbG9yZXIxL2RpcmVjdG9yeTEvZmlsZTIudHh0Jyk7XG5leHBsb3JlcjEuYWRkRmlsZVBhdGgoJ2V4cGxvcmVyMS9kaXJlY3RvcnkyL2ZpbGUzLnR4dCcpO1xuIl19